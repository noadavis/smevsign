<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:tns="urn://x-artefacts-smev-gov-ru/services/message-exchange/types/basic/1.3"
           xmlns:xmime="http://www.w3.org/2005/05/xmlmime"
           xmlns:jxb="http://java.sun.com/xml/ns/jaxb"
           targetNamespace="urn://x-artefacts-smev-gov-ru/services/message-exchange/types/basic/1.3"
           elementFormDefault="qualified"
           attributeFormDefault="unqualified"
           jxb:version="2.0">

    <xs:annotation>
        <xs:documentation>Базовые типы.</xs:documentation>
        <xs:appinfo>
            <jxb:schemaBindings>
                <!-- Напишите здесь имя пакета, в который должны попасть классы, сгенерированные из этой схемы с помощью wsimport (для JAX-WS) -->
                <jxb:package name="ru.it.smev.message_exchange.autogenerated.types.basic.v1_3"/>
            </jxb:schemaBindings>
        </xs:appinfo>
    </xs:annotation>

    <xs:element name="MessagePrimaryContent">
        <xs:annotation><xs:documentation>Содержательная часть сообщения СМЭВ.</xs:documentation></xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:any namespace="##other" processContents="lax">
                    <xs:annotation><xs:documentation>Корневой элемент XML-документа запроса присоединять сюда.</xs:documentation></xs:annotation>
                </xs:any>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="AttachmentHeaderList">
        <xs:annotation>
            <xs:documentation>
                Заголовки файлов, приложенных к СМЭВ-сообщению.
                Заголовки отделены от содержимого вложений.
                Это нужно потому, что заголовки должны попадать под ЭП-ОВ,
                а содержимое - должно не попадать (иначе не будет работать MTOM).
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="AttachmentHeader" type="tns:AttachmentHeaderType" maxOccurs="unbounded"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="AttachmentHeaderType">
        <xs:annotation>
            <xs:documentation>
                Файл, приложенный к СМЭВ-сообщению.
                Имя файла не передаётся; вложения идентифицируются только идентификаторами внутри сообщения.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="contentId" type="xs:string">
                <xs:annotation>
                    <xs:documentation>
                        Идентификатор вложения. Ссылка на соответствующий //AttachmentContent/@Id
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="NamespaceUri" type="xs:string" minOccurs="0">
                <xs:annotation><xs:documentation>Нейспейс вложения (если зарегистрировано в СМЭВ)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="MimeType" type="tns:RFC2046MimeTypesType">
                <xs:annotation><xs:documentation>Тип контента.</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="SignaturePKCS7" type="xs:base64Binary" minOccurs="0">
                <xs:annotation><xs:documentation>ЭЦП в формате PKCS#7 detached. Подписывать ключом ЭП-СП.</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="Archive" type="tns:ArchiveType" minOccurs="0">
                <xs:annotation><xs:documentation>Объявление передаваемых файлов (через MTOM) в архиве</xs:documentation></xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:element name="AttachmentContentList">
        <xs:annotation>
            <xs:documentation>
                Cодержимое вложенных файлов.
                У элемента списка, тип base64Binary и наличие атрибута expectedContentTypes - подсказка для frameworks типа JAX-WS передавать содержимое этого элемента по MTOM протоколу.
                Кроме того, значение expectedContentTypes="application/octet-stream" - подсказка JAX-WS дать доступ к этому элементу через InputStream/OutputStream.
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="AttachmentContent" type="tns:AttachmentContentType" maxOccurs="unbounded"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="FSAttachmentsList">
        <xs:annotation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="FSAttachment" type="tns:FSAuthInfo" maxOccurs="unbounded"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>


    <xs:complexType name="FSAuthInfo">
        <xs:sequence>
            <xs:element name="uuid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>
                        Идентификатор файла. Ссылка на соответствующий файл.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="UserName" type="xs:string">
                <xs:annotation><xs:documentation>Пользователь.</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="Password" type="xs:string">
                <xs:annotation><xs:documentation>Пароль.</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="FileName" type="xs:string">
                <xs:annotation><xs:documentation>Имя файла.</xs:documentation></xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="AttachmentContentType">
        <xs:annotation>
            <xs:documentation>
                Содержимое вложенного файла.
                Значение атрибута attachmentId должно быть уникально среди всех элементов и атрибутов СМЭВ-сообщения, имеющих тип xs:ID.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="Id" type="xs:ID"/>
            <xs:element name="Content" type="xs:base64Binary" xmime:expectedContentTypes="application/octet-stream"/>
        </xs:sequence>
    </xs:complexType>

    <xs:element name="RefAttachmentHeaderList">
        <xs:annotation>
            <xs:documentation>
                Заголовки файлов, приложенных к СМЭВ-сообщению.
                Заголовки отделены от содержимого вложений.
                Это нужно потому, что заголовки должны попадать под ЭП-ОВ,
                а содержимое - должно не попадать (иначе не будет работать MTOM).
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="RefAttachmentHeader" type="tns:RefAttachmentHeaderType" maxOccurs="unbounded"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="RefAttachmentHeaderType">
        <xs:annotation>
            <xs:documentation>
                Ссылка на файл, приложенный к СМЭВ-сообщению.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="uuid" type="xs:string">
                <xs:annotation>
                    <xs:documentation>
                        Идентификатор файла. Ссылка на соответствующий файл.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="FileName" type="xs:string" minOccurs="0">
                <xs:annotation><xs:documentation>Имя файла</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="NamespaceUri" type="xs:string" minOccurs="0">
                <xs:annotation><xs:documentation>Нейспейс вложения (если зарегистрировано в СМЭВ)</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="Hash" type="xs:string">
                <xs:annotation><xs:documentation>Хэш файла.</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="MimeType" type="tns:RFC2046MimeTypesType">
                <xs:annotation><xs:documentation>Тип контента.</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="SignaturePKCS7" type="xs:base64Binary" minOccurs="0">
                <xs:annotation><xs:documentation>ЭЦП в формате PKCS#7 detached. Подписывать ключом ЭП-СП.</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="Archive" type="tns:ArchiveType" minOccurs="0">
                <xs:annotation><xs:documentation>Объявление передаваемых файлов (через ФХ) в архиве</xs:documentation></xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>


    <xs:simpleType name="UUID">
        <xs:annotation>
            <xs:documentation>
                Строковое представление UUID.
                В СМЭВ UUID используются в качестве идентификаторов сообщений.
                Идентификаторы присваиваются сообщеням отправителями.
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:pattern value="[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:element name="MessageReference">
        <xs:annotation><xs:documentation>Тип для подписанных ссылок на сообщения СМЭВ.</xs:documentation></xs:annotation>
        <xs:complexType>
            <xs:simpleContent>
                <xs:extension base="tns:UUID">
                    <xs:attribute name="Id" type="xs:ID"/>
                </xs:extension>
            </xs:simpleContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="AckTargetMessage">
        <xs:annotation>
            <xs:documentation>
                Ссылка на сообщение, получение которого подтверждается методом Ack.
                Сюда нужно писать Id СМЭВ-сообщения, который берётся
                из //GetRequestResponse/.../SenderProvidedRequestData/MessageID/text() либо
                из //GetResponseResponse/.../SenderProvidedRequestData/MessageID/text().
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:simpleContent>
                <xs:extension base="tns:UUID">
                    <xs:attribute name="Id" type="xs:ID" use="required"/>
                    <xs:attribute name="accepted" type="xs:boolean" use="optional">
                        <xs:annotation>
                            <xs:documentation>
                                true, если ЭП-СМЭВ прошла валидацию и сообщение передано ИС. false, если ЭП-СМЭВ отвергнута, и сообщение проигнорировано.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:extension>
            </xs:simpleContent>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="ArchiveType">
        <xs:annotation>
            <xs:documentation>Объявление передаваемых файлов (через ФХ или MTOM) в архиве</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="File" type="tns:FileType" minOccurs="1" maxOccurs="1000"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="FileType">
        <xs:annotation>
            <xs:documentation>Описание файла</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="Name" type="xs:string">
                <xs:annotation><xs:documentation>Наименование файла</xs:documentation></xs:annotation>
            </xs:element>
            <xs:element name="NamespaceUri" type="xs:string">
                <xs:annotation><xs:documentation>Нейспейс файла вложения</xs:documentation></xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="XMLDSigSignatureType">
        <xs:annotation>
            <xs:documentation>
                Элекронная подпись в формате XMLDSig.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:any namespace="http://www.w3.org/2000/09/xmldsig#" processContents="lax">
                <xs:annotation>
                    <xs:documentation>
                        Собственно подпись, по спецификации XMLDSig.
                        Объявлена как any для того, чтобы инструменты типа JAXB не генерировали классов для пространства имён
                        http://www.w3.org/2000/09/xmldsig#.
                        Это, в свою очередь, нужно потому, что инструменты, генерирующие и проверяющие ЭЦП (напр. Apache Santuario)
                        работают с DOM-деревьями, а не с JAXB-объектами.
                    </xs:documentation>
                </xs:annotation>
            </xs:any>
        </xs:sequence>
    </xs:complexType>

    <xs:simpleType name="RFC2046MimeTypesType">
        <xs:annotation><xs:documentation>Типы вложений, в формате RFC-2046.</xs:documentation></xs:annotation>
        <xs:restriction base="xs:string">
            <xs:pattern value="(text|image|audio|video|application)/[a-zA-Z0-9\-+.]*"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:element name="MessageTypeSelector">
        <xs:complexType>
            <xs:annotation>
                <xs:documentation>
                    Селектор, с помощью которого при приёме запроса или ответа
                    можно задать фильтр по типу запроса (ответа).
                    Поскольку тип запроса или ответа однозначно определяется полным именем
                    корневого XML-элемента его бизнес-данных,
                    селектор представляет из себя структуру для задания этого имени.
                    Если селектор пуст, это значит, что нужно принять запрос (ответ)
                    без фильтрации по типам.
                </xs:documentation>
            </xs:annotation>
            <xs:sequence>
                <xs:sequence minOccurs="0">
                    <xs:element name="NamespaceURI" type="xs:anyURI"/>
                    <xs:element name="RootElementLocalName" type="xs:NCName"/>
                </xs:sequence>
                <xs:element name="Timestamp" type="xs:dateTime">
                    <xs:annotation><xs:documentation>Текущая дата и время.</xs:documentation></xs:annotation>
                </xs:element>
                <xs:element name="NodeID" type="tns:string-50" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>
                            Идентификатор нода.
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
            </xs:sequence>
            <xs:attribute name="Id" type="xs:ID"/>
        </xs:complexType>
    </xs:element>

    <xs:simpleType name="InteractionStatusType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="doesNotExist">
                <xs:annotation><xs:documentation>Запрос с таким Id не найден в БД СМЭВ.</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="requestIsQueued">
                <xs:annotation><xs:documentation>Запрос находится в очереди на асинхронную валидацию.</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="requestIsAcceptedBySmev">
                <xs:annotation><xs:documentation>Запрос прошел асинхронную валидацию.</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="requestIsRejectedBySmev">
                <xs:annotation><xs:documentation>Запрос не прошёл асинхронную валидацию.</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="requestIsProcessed">
                <xs:annotation><xs:documentation>Запрос обработан СМЭВ.</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="underProcessing">
                <xs:annotation><xs:documentation>Обрабатывается поставщиком сервиса.</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="responseIsQueued">
                <xs:annotation><xs:documentation>Ответ на запрос находится в очереди на асинхронную валидацию.</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="responseIsAcceptedBySmev">
                <xs:annotation><xs:documentation>Ответ на запрос прошел асинхронную валидацию.</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="responseIsRejectedBySmev">
                <xs:annotation><xs:documentation>Ответ на запрос не прошёл асинхронную валидацию.</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="responseIsProcessed">
                <xs:annotation><xs:documentation>Ответ на запрос обработан СМЭВ.</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="cancelled">
                <xs:annotation><xs:documentation>Запрос отменён сервисом.</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="messageIsArchived">
                <xs:annotation><xs:documentation>Сообщение переведено в архив.</xs:documentation></xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="messageIsDelivered">
                <xs:annotation><xs:documentation>Сообщение получено получателем.</xs:documentation></xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>
    
    <xs:element name="Timestamp">
        <xs:complexType>
            <xs:simpleContent>
                <xs:extension base="xs:dateTime">
                    <xs:attribute name="Id" type="xs:ID"/>
                </xs:extension>
            </xs:simpleContent>
        </xs:complexType>
    </xs:element>


    <xs:simpleType name="string-10">
        <xs:restriction base="xs:string">
            <xs:maxLength value="10"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="string-50">
        <xs:restriction base="xs:string">
            <xs:maxLength value="50"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="string-100">
        <xs:restriction base="xs:string">
            <xs:maxLength value="100"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="string-200">
        <xs:restriction base="xs:string">
            <xs:maxLength value="200"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="string-500">
        <xs:restriction base="xs:string">
            <xs:maxLength value="500"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="string-1500">
        <xs:restriction base="xs:string">
            <xs:maxLength value="1500"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="string-4000">
        <xs:restriction base="xs:string">
            <xs:maxLength value="4000"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="Void">
        <xs:annotation><xs:documentation>Тип элемента, который передаёт информацию фактом своего наличия.</xs:documentation></xs:annotation>
    </xs:complexType>

    <xs:complexType name="SmevFault">
        <xs:complexContent>
            <xs:extension  base="tns:Void">
                <xs:sequence>
                    <xs:element name="Code" type="tns:string-100"  minOccurs="0"/>
                    <xs:element name="Description" type="xs:string"  minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

</xs:schema>


